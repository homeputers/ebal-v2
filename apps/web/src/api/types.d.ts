/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    get: operations["health"];
  };
  "/groups": {
    get: operations["listGroups"];
    post: operations["createGroup"];
  };
  "/groups/{id}": {
    get: operations["getGroup"];
    put: operations["updateGroup"];
    delete: operations["deleteGroup"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/groups/{id}/members/{memberId}": {
    post: operations["addGroupMember"];
    delete: operations["removeGroupMember"];
    parameters: {
      path: {
        id: string;
        memberId: string;
      };
    };
  };
  "/members": {
    get: operations["listMembers"];
    post: operations["createMember"];
  };
  "/members/{id}": {
    get: operations["getMember"];
    put: operations["updateMember"];
    delete: operations["deleteMember"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/services": {
    get: operations["listServices"];
    post: operations["createService"];
  };
  "/services/{id}": {
    get: operations["getService"];
    put: operations["updateService"];
    delete: operations["deleteService"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/services/{id}/plan-items": {
    get: operations["listServicePlanItems"];
    post: operations["addServicePlanItem"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/service-plan-items/{id}": {
    put: operations["updateServicePlanItem"];
    delete: operations["deleteServicePlanItem"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/songs": {
    get: operations["listSongs"];
    post: operations["createSong"];
  };
  "/songs/{id}": {
    get: operations["getSong"];
    put: operations["updateSong"];
    delete: operations["deleteSong"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/songs/{id}/arrangements": {
    get: operations["listArrangements"];
    post: operations["addArrangement"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/songs/arrangements/{arrangementId}": {
    put: operations["updateArrangement"];
    delete: operations["deleteArrangement"];
    parameters: {
      path: {
        arrangementId: string;
      };
    };
  };
  "/song-sets": {
    get: operations["listSongSets"];
    post: operations["createSongSet"];
  };
  "/song-sets/{id}": {
    get: operations["getSongSet"];
    put: operations["updateSongSet"];
    delete: operations["deleteSongSet"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/song-sets/{id}/items": {
    get: operations["listSongSetItems"];
    post: operations["addSongSetItem"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/song-sets/{id}/items/{itemId}": {
    delete: operations["removeSongSetItem"];
    parameters: {
      path: {
        id: string;
        itemId: string;
      };
    };
  };
  "/song-sets/{id}/items/reorder": {
    post: operations["reorderSongSetItems"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
  "/song-set-items/{id}": {
    put: operations["updateSongSetItem"];
    delete: operations["deleteSongSetItem"];
    parameters: {
      path: {
        id: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Health: {
      status?: string;
    };
    GroupRequest: {
      name: string;
    };
    GroupResponse: {
      /** Format: uuid */
      id?: string;
      name?: string;
      memberIds?: string[];
    };
    PageGroupResponse: {
      content?: components["schemas"]["GroupResponse"][];
      totalElements?: number;
      totalPages?: number;
      number?: number;
      size?: number;
    };
    MemberRequest: {
      displayName: string;
      instruments?: string[];
    };
    MemberResponse: {
      /** Format: uuid */
      id?: string;
      displayName?: string;
      instruments?: string[];
    };
    PageMemberResponse: {
      content?: components["schemas"]["MemberResponse"][];
      totalElements?: number;
      totalPages?: number;
      number?: number;
      size?: number;
    };
    ServiceRequest: {
      /** Format: date-time */
      startsAt: string;
      location?: string;
    };
    ServiceResponse: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      startsAt?: string;
      location?: string;
    };
    PageServiceResponse: {
      content?: components["schemas"]["ServiceResponse"][];
      totalElements?: number;
      totalPages?: number;
      number?: number;
      size?: number;
    };
    ServicePlanItemRequest: {
      type?: string;
      /** Format: uuid */
      refId?: string;
      sortOrder?: number;
      notes?: string;
    };
    ServicePlanItemResponse: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      serviceId?: string;
      type?: string;
      /** Format: uuid */
      refId?: string;
      sortOrder?: number;
      notes?: string;
    };
    SongRequest: {
      title: string;
      ccli?: string;
      author?: string;
      defaultKey?: string;
      tags?: string[];
    };
    SongResponse: {
      /** Format: uuid */
      id?: string;
      title?: string;
      ccli?: string;
      author?: string;
      defaultKey?: string;
      tags?: string[];
    };
    PageSongResponse: {
      content?: components["schemas"]["SongResponse"][];
      totalElements?: number;
      totalPages?: number;
      number?: number;
      size?: number;
    };
    ArrangementRequest: {
      key?: string;
      bpm?: number;
      meter?: string;
      lyricsChordpro?: string;
    };
    ArrangementResponse: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      songId?: string;
      key?: string;
      bpm?: number;
      meter?: string;
      lyricsChordpro?: string;
    };
    SongSetRequest: {
      name: string;
    };
    SongSetResponse: {
      /** Format: uuid */
      id?: string;
      name?: string;
    };
    PageSongSetResponse: {
      content?: components["schemas"]["SongSetResponse"][];
      totalElements?: number;
      totalPages?: number;
      number?: number;
      size?: number;
    };
    SongSetItemRequest: {
      /** Format: uuid */
      arrangementId?: string;
      sortOrder?: number;
      transpose?: number;
      capo?: number;
    };
    SongSetItemResponse: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      songSetId?: string;
      /** Format: uuid */
      arrangementId?: string;
      sortOrder?: number;
      transpose?: number;
      capo?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  health: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Health"];
        };
      };
    };
  };
  listGroups: {
    parameters: {
      query?: {
        page?: number;
        size?: number;
      };
    };
    responses: {
      /** @description Groups page */
      200: {
        content: {
          "application/json": components["schemas"]["PageGroupResponse"];
        };
      };
    };
  };
  createGroup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["GroupResponse"];
        };
      };
    };
  };
  getGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["GroupResponse"];
        };
      };
    };
  };
  updateGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["GroupResponse"];
        };
      };
    };
  };
  deleteGroup: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  addGroupMember: {
    parameters: {
      path: {
        id: string;
        memberId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  removeGroupMember: {
    parameters: {
      path: {
        id: string;
        memberId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listMembers: {
    parameters: {
      query?: {
        q?: string;
        page?: number;
        size?: number;
      };
    };
    responses: {
      /** @description Members page */
      200: {
        content: {
          "application/json": components["schemas"]["PageMemberResponse"];
        };
      };
    };
  };
  createMember: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["MemberResponse"];
        };
      };
    };
  };
  getMember: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MemberResponse"];
        };
      };
    };
  };
  updateMember: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MemberResponse"];
        };
      };
    };
  };
  deleteMember: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listServices: {
    parameters: {
      query?: {
        page?: number;
        size?: number;
      };
    };
    responses: {
      /** @description Services page */
      200: {
        content: {
          "application/json": components["schemas"]["PageServiceResponse"];
        };
      };
    };
  };
  createService: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["ServiceResponse"];
        };
      };
    };
  };
  getService: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ServiceResponse"];
        };
      };
    };
  };
  updateService: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ServiceResponse"];
        };
      };
    };
  };
  deleteService: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listServicePlanItems: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ServicePlanItemResponse"][];
        };
      };
    };
  };
  addServicePlanItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServicePlanItemRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["ServicePlanItemResponse"];
        };
      };
    };
  };
  updateServicePlanItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServicePlanItemRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ServicePlanItemResponse"];
        };
      };
    };
  };
  deleteServicePlanItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listSongs: {
    parameters: {
      query?: {
        title?: string;
        tag?: string;
        page?: number;
        size?: number;
      };
    };
    responses: {
      /** @description Songs page */
      200: {
        content: {
          "application/json": components["schemas"]["PageSongResponse"];
        };
      };
    };
  };
  createSong: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["SongResponse"];
        };
      };
    };
  };
  getSong: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongResponse"];
        };
      };
    };
  };
  updateSong: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongResponse"];
        };
      };
    };
  };
  deleteSong: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listArrangements: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ArrangementResponse"][];
        };
      };
    };
  };
  addArrangement: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ArrangementRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["ArrangementResponse"];
        };
      };
    };
  };
  updateArrangement: {
    parameters: {
      path: {
        arrangementId: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ArrangementRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ArrangementResponse"];
        };
      };
    };
  };
  deleteArrangement: {
    parameters: {
      path: {
        arrangementId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listSongSets: {
    parameters: {
      query?: {
        page?: number;
        size?: number;
      };
    };
    responses: {
      /** @description Song sets page */
      200: {
        content: {
          "application/json": components["schemas"]["PageSongSetResponse"];
        };
      };
    };
  };
  createSongSet: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongSetRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["SongSetResponse"];
        };
      };
    };
  };
  getSongSet: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongSetResponse"];
        };
      };
    };
  };
  updateSongSet: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongSetRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongSetResponse"];
        };
      };
    };
  };
  deleteSongSet: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  listSongSetItems: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongSetItemResponse"][];
        };
      };
    };
  };
  addSongSetItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongSetItemRequest"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json": components["schemas"]["SongSetItemResponse"];
        };
      };
    };
  };
  removeSongSetItem: {
    parameters: {
      path: {
        id: string;
        itemId: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  reorderSongSetItems: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": string[];
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
  updateSongSetItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SongSetItemRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SongSetItemResponse"];
        };
      };
    };
  };
  deleteSongSetItem: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description No Content */
      204: {
        content: never;
      };
    };
  };
}
